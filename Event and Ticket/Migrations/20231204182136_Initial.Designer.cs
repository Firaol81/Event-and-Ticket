// <auto-generated />
using System;
using Event_and_Ticket.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Event_and_Ticket.Migrations
{
    [DbContext(typeof(MovieContext))]
    [Migration("20231204182136_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Event_and_Ticket.Models.Event", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventId"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VenueId")
                        .HasColumnType("int");

                    b.HasKey("EventId");

                    b.HasIndex("VenueId");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            EventId = 1,
                            Date = new DateTime(2023, 12, 11, 12, 21, 35, 813, DateTimeKind.Local).AddTicks(3824),
                            Description = "Description 1",
                            Location = "Location 1",
                            Name = "Event 1"
                        },
                        new
                        {
                            EventId = 2,
                            Date = new DateTime(2023, 12, 18, 12, 21, 35, 813, DateTimeKind.Local).AddTicks(3880),
                            Description = "Description 2",
                            Location = "Location 2",
                            Name = "Event 2"
                        });
                });

            modelBuilder.Entity("Event_and_Ticket.Models.Ticket", b =>
                {
                    b.Property<int>("TicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TicketId"), 1L, 1);

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("QuantityAvailable")
                        .HasColumnType("int");

                    b.Property<string>("TicketType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TicketId");

                    b.HasIndex("EventId");

                    b.ToTable("Tickets");

                    b.HasData(
                        new
                        {
                            TicketId = 1,
                            EventId = 1,
                            Price = 10.0m,
                            QuantityAvailable = 100,
                            TicketType = "SampleType1"
                        },
                        new
                        {
                            TicketId = 2,
                            EventId = 2,
                            Price = 15.0m,
                            QuantityAvailable = 150,
                            TicketType = "SampleType2"
                        });
                });

            modelBuilder.Entity("Event_and_Ticket.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            UserName = "User1"
                        },
                        new
                        {
                            UserId = 2,
                            UserName = "User2"
                        });
                });

            modelBuilder.Entity("Event_and_Ticket.Models.Venue", b =>
                {
                    b.Property<int>("VenueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VenueId"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VenueId");

                    b.ToTable("Venues");

                    b.HasData(
                        new
                        {
                            VenueId = 1,
                            Address = "Address 1",
                            Capacity = 200,
                            Name = "Venue 1"
                        },
                        new
                        {
                            VenueId = 2,
                            Address = "Address 2",
                            Capacity = 300,
                            Name = "Venue 2"
                        });
                });

            modelBuilder.Entity("Event_and_Ticket.Models.Event", b =>
                {
                    b.HasOne("Event_and_Ticket.Models.Venue", null)
                        .WithMany("Events")
                        .HasForeignKey("VenueId");
                });

            modelBuilder.Entity("Event_and_Ticket.Models.Ticket", b =>
                {
                    b.HasOne("Event_and_Ticket.Models.Event", "Event")
                        .WithMany("Tickets")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");
                });

            modelBuilder.Entity("Event_and_Ticket.Models.Event", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("Event_and_Ticket.Models.Venue", b =>
                {
                    b.Navigation("Events");
                });
#pragma warning restore 612, 618
        }
    }
}
